{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Header.js","webpack:///./src/components/nav/NestedPagesProvider.js","webpack:///./src/components/nav/NestedLink.js","webpack:///./src/components/nav.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","SEO","description","lang","meta","site","_public_static_d_1620376682_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","StaticQueryContext","createContext","StaticQuery","props","react_default","Consumer","staticQueryData","query","render","children","object","func","Header","memo","siteTitle","className","_ref$isHome","isHome","rest","objectWithoutPropertiesLoose_default","classNames","header--alt","gatsby_link_default","to","src","frameBorder","scrolling","width","height","react_github_btn","href","data-icon","aria-label","displayName","NestedPagesProvider","gatsby_browser_entry_StaticQuery","nodes","keyBy","allSitePage","edges","filter","edge","node","context","id","map","isRoot","parent","getRootNodes","values","getChildNodes","path","sort","b","aLower","toLowerCase","bLower","_2987220871","NestedLink","_ref$getChildNodes","childrenNodes","expanded","indexOf","sidebar__nav__item--expanded","length","mdi-chevron-down","mdi-chevron-right","child","key","Nav","es","_ref2","order","Layout","console","log","grid-container--alt","components_Header","_2562398822"],"mappings":"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","file":"component---src-pages-404-js-24bce775295b3c05b601.js","sourcesContent":["import React from 'react';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst NotFoundPage = () => (\n    <Layout>\n        <SEO title=\"404: Not found\" />\n        <h1>NOT FOUND</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n);\n\nexport default NotFoundPage;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, title }) {\n    const { site } = useStaticQuery(\n        graphql`\n            query {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                        author\n                    }\n                }\n            }\n        `\n    );\n\n    const metaDescription = description || site.siteMetadata.description;\n\n    return (\n        <Helmet\n            htmlAttributes={{\n                lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${site.siteMetadata.title}`}\n            meta={[\n                {\n                    name: 'description',\n                    content: metaDescription,\n                },\n                {\n                    property: 'og:title',\n                    content: title,\n                },\n                {\n                    property: 'og:description',\n                    content: metaDescription,\n                },\n                {\n                    property: 'og:type',\n                    content: 'website',\n                },\n                {\n                    name: 'twitter:card',\n                    content: 'summary',\n                },\n                {\n                    name: 'twitter:creator',\n                    content: site.siteMetadata.author,\n                },\n                {\n                    name: 'twitter:title',\n                    content: title,\n                },\n                {\n                    name: 'twitter:description',\n                    content: metaDescription,\n                },\n            ].concat(meta)}\n        />\n    );\n}\n\nSEO.defaultProps = {\n    lang: 'en',\n    meta: [],\n    description: '',\n};\n\nexport default SEO;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport classNames from 'classnames';\nimport GitHubButton from 'react-github-btn';\n\nconst Header = React.memo(\n    ({ siteTitle, description, className, isHome = false, ...rest }) => (\n        <header\n            className={classNames(\n                'header',\n                { 'header--alt': !isHome },\n                className\n            )}\n            {...rest}>\n            <h1>\n                <Link to=\"/home/\">{siteTitle}</Link>\n            </h1>\n            <p className=\"header__description\">\n                {description}\n                {isHome ? (\n                    <iframe\n                        src=\"https://ghbtns.com/github-btn.html?user=atomicpages&repo=pretty-checkbox-react&type=star&count=true\"\n                        frameBorder=\"0\"\n                        scrolling=\"0\"\n                        width=\"90px\"\n                        height=\"20px\"\n                        title=\"Github Stargazers\"\n                    />\n                ) : null}\n            </p>\n            {!isHome ? (\n                <p className=\"github-buttons button-group\">\n                    <GitHubButton\n                        href=\"https://github.com/atomicpages/pretty-checkbox-react\"\n                        data-icon=\"octicon-star\"\n                        aria-label=\"Star atomicpages/pretty-checkbox-react on GitHub\">\n                        Star\n                    </GitHubButton>\n                    <GitHubButton\n                        href=\"https://github.com/atomicpages/pretty-checkbox-react/archive/master.zip\"\n                        data-icon=\"octicon-cloud-download\"\n                        aria-label=\"Download atomicpages/pretty-checkbox-react on GitHub\">\n                        Download\n                    </GitHubButton>\n                </p>\n            ) : null}\n        </header>\n    )\n);\n\nHeader.displayName = 'Header';\n\nexport default Header;\n","import React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport keyBy from 'lodash/keyBy';\n\nexport default function NestedPagesProvider({ children }) {\n    return (\n        <StaticQuery\n            query={graphql`\n                {\n                    allSitePage {\n                        edges {\n                            node {\n                                path\n                                context {\n                                    id\n                                    parent\n                                    children\n                                    slug\n                                    title\n                                    order\n                                }\n                            }\n                        }\n                    }\n                }\n            `}\n            render={data => {\n                const nodes = keyBy(\n                    data.allSitePage.edges\n                        .filter(\n                            edge => edge.node.context && edge.node.context.id\n                        )\n                        .map(edge => ({\n                            ...edge.node,\n                            isRoot: !edge.node.context.parent,\n                        })),\n                    node => node.context.id\n                );\n\n                return children({\n                    getRootNodes: () =>\n                        Object.values(nodes)\n                            .filter(node => node.isRoot)\n                            .map(node => {\n                                const title = node.context.title;\n                                return {\n                                    ...node,\n                                    context: {\n                                        ...node.context,\n                                        title: title,\n                                    },\n                                };\n                            }),\n                    getChildNodes: node => {\n                        if (!node.context.children) {\n                            return [];\n                        }\n\n                        return node.context.children\n                            .map(path => nodes[path])\n                            .sort((a, b) => {\n                                const aLower = a.context.title.toLowerCase();\n                                const bLower = b.context.title.toLowerCase();\n\n                                if (aLower < bLower) {\n                                    return -1;\n                                }\n\n                                if (aLower > bLower) {\n                                    return 1;\n                                }\n\n                                return 0;\n                            });\n                    },\n                });\n            }}\n        />\n    );\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'gatsby';\n\nexport default function NestedLink({\n    location,\n    node,\n    className,\n    getChildNodes = () => [],\n}) {\n    const childrenNodes = getChildNodes(node);\n    const expanded = location.indexOf(node.path) === 0;\n\n    return (\n        <li\n            className={classNames('sidebar__nav__item', className, {\n                'sidebar__nav__item--expanded': expanded\n            })}>\n            <Link to={node.path}>\n                {node.context.title}\n                {childrenNodes.length ? (\n                    <i className={classNames('sidebar__nav__item__ec', 'mdi', {\n                        'mdi-chevron-down': expanded,\n                        'mdi-chevron-right': !expanded\n                    })} />\n                ) : null}\n            </Link>\n            {childrenNodes.length && expanded ? (\n                <ul>\n                    {childrenNodes.map(child => (\n                        <NestedLink\n                            key={child.path}\n                            location={location}\n                            node={child}\n                            getChildNodes={getChildNodes}\n                            className=\"nested-link\"\n                        />\n                    ))}\n                </ul>\n            ) : null}\n        </li>\n    );\n}\n","import React from 'react';\nimport { Location } from '@reach/router';\n\nimport NestedPagesProvider from './nav/NestedPagesProvider';\nimport NestedLink from './nav/NestedLink';\n\nexport default function Nav(props) {\n    return (\n        <Location>\n            {({ location }) => (\n                <nav className=\"sidebar\" {...props}>\n                    <NestedPagesProvider>\n                        {({ getRootNodes, getChildNodes }) => {\n                            return (\n                                <ul className=\"sidebar__nav\">\n                                    {getRootNodes()\n                                        .sort(\n                                            (a, b) =>\n                                                a.context.order -\n                                                b.context.order\n                                        )\n                                        .map(node => (\n                                            <NestedLink\n                                                key={node.path}\n                                                location={location.pathname}\n                                                node={node}\n                                                getChildNodes={getChildNodes}\n                                            />\n                                        ))}\n                                </ul>\n                            );\n                        }}\n                    </NestedPagesProvider>\n                </nav>\n            )}\n        </Location>\n    );\n}\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react';\nimport { StaticQuery, graphql } from 'gatsby';\nimport { Location } from '@reach/router';\n\nimport classNames from 'classnames';\n\nimport Header from './Header';\nimport Nav from './nav';\n\nimport '../styles/main.scss';\n\nconst Layout = React.memo(({ children }) => (\n    <StaticQuery\n        query={graphql`\n            query SiteTitleQuery {\n                site {\n                    siteMetadata {\n                        title\n                        description\n                    }\n                }\n            }\n        `}\n        render={data => (\n            <Location>\n                {({ location }) => {\n                    console.log(location);\n\n                    return (\n                        <div\n                            className={classNames('grid-container', {\n                                'grid-container--alt': location.pathname !== '/home/'\n                            })}>\n                            <Header\n                                siteTitle={data.site.siteMetadata.title}\n                                description={data.site.siteMetadata.description}\n                                isHome={location.pathname === '/home/'}\n                            />\n                            <Nav />\n                            <main className=\"content\">{children}</main>\n                        </div>\n                    );\n                }}\n            </Location>\n        )}\n    />\n));\n\nLayout.displayName = 'Layout';\n\nexport default Layout;\n"],"sourceRoot":""}